# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
# Exercise: Config and Deployment
# Orchestrate or schedule a set of jobs
jobs:
  configure_infrastructure: 
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["60:63:e6:09:01:8e:ad:c8:cc:1c:e5:92:c4:85:e4:19"] # You can get this ID in the section where you registered the SSH Key
      - attach_workspace:
          at: ~/
      - run: cat .circleci/ansible/inventory.txt
      - run:
          name: Install dependencies
          command: |
            # install the dependencies needed for your playbook
            apk add --update jq tar gzip ansible nodejs npm curl
            pip install awscli
      - run: cat .circleci/ansible/inventory.txt  
      - run:
          name: Configure server
          command: |
            echo NODE_ENV=production > "backend/.env"
            echo ENVIRONMENT=production >> "backend/.env"
            echo TYPEORM_CONNECTION=postgres >> "backend/.env"
            echo TYPEORM_ENTITIES=./src/modules/domain/**/*.entity.ts >> "backend/.env"
            echo TYPEORM_MIGRATIONS=./src/migrations/*.ts >> "backend/.env"
            echo TYPEORM_MIGRATIONS_DIR=./src/migrations >> "backend/.env"
            echo NODE_ENV=production >> "backend/.env"
            echo TYPEORM_HOST=$TYPEORM_HOST >> "backend/.env"
            echo TYPEORM_PORT=$TYPEORM_PORT >> "backend/.env"
            echo TYPEORM_USERNAME=$TYPEORM_USERNAME >> "backend/.env"
            echo TYPEORM_PASSWORD=$TYPEORM_PASSWORD >> "backend/.env"
            echo TYPEORM_DATABASE=$TYPEORM_DATABASE >> "backend/.env"
            echo "back-end env start"
            cat backend/.env
            echo "back-end env stop"
            ansible-playbook -i .circleci/ansible/inventory.txt .circleci/ansible/configure-server.yml 

workflows:
  # Name the workflow "my_workflow"
  my_workflow:
    jobs:
      - configure_infrastructure