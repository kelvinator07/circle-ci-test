# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Declare a dependency on the welcome-orb
  welcome: circleci/welcome-orb@0.4.1
# Orchestrate or schedule a set of jobs
jobs:
  print_hello: # This is our first job.
    docker: # it uses the docker executor
      - image: circleci/node:13.8.0
    # Steps are a list of commands to run inside the docker container above.
    steps:
      - run: echo "Hello" # This prints "Hello" to stdout.
      
  print_world: # This is our second job.
    docker: # it uses the docker executor
      - image: circleci/node:13.8.0
    # Steps are a list of commands to run inside the docker container above.
    steps:
      - run: echo " World." # This prints "World" to stdout.
      
  build:
    docker:
      - image: cimg/base:2020.01
    steps:
      - checkout
      - run:
          name: "echo an env var that is part of our project"
          command: |
            echo $CIRCLE_BUILD_URL    

  save_hello_world_output: 
    docker: # it uses the docker executor
      - image: circleci/node:13.8.0
    # Steps are a list of commands to run inside the docker container above.
    steps:
      - run: echo "Hello world to file." > ~/output.txt
      - persist_to_workspace: 
          root: ~/
          paths:
            - output.txt
      
  print_output_file: 
    docker: # it uses the docker executor
      - image: circleci/node:13.8.0
    # Steps are a list of commands to run inside the docker container above.
    steps:
      - attach_workspace:
          at: ~/
      - run: cat ~/output.txt

workflows:
  # Name the workflow "one_and_two"
  one_and_two:
    # Run both jobs in its own container
    jobs:
      - build
      - save_hello_world_output
      - print_output_file
#           requires:
#             - save_hello_world_output
      - print_hello
      - print_world:
          requires:
            - print_hello
